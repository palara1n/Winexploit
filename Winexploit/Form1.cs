using System;
using System.Diagnostics;
using System.Windows.Forms;

namespace Winexploit
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();

            // Create and configure the button
            Button btnKillProcesses = new Button();
            btnKillProcesses.Text = "Start exploit";
            btnKillProcesses.Size = new System.Drawing.Size(200, 100); // Set button size
            btnKillProcesses.Font = new System.Drawing.Font("Arial", 14); // Set a larger font size

            // Position the button on the right side of the window
            btnKillProcesses.Location = new System.Drawing.Point(this.ClientSize.Width - btnKillProcesses.Width - 10, 50);
            btnKillProcesses.Anchor = AnchorStyles.Top | AnchorStyles.Right; // Ensure it stays on the right when resizing

            btnKillProcesses.Click += new EventHandler(btnKillProcesses_Click);

            // Add the button to the form
            this.Controls.Add(btnKillProcesses);
        }

        // Event handler for button click
        private void btnKillProcesses_Click(object sender, EventArgs e)
        {
            KillAllProcesses();
        }

        // Method to kill all processes
        private void KillAllProcesses()
        {
            Process[] processes = Process.GetProcesses(); // Get all the processes in your system

            foreach (var process in processes)
            {
                try
                {
                    // Skip critical system processes to avoid system instability
                    if (process.ProcessName != "explorer" && process.ProcessName != "winlogon" && process.ProcessName != "csrss" && process.ProcessName != "services" && process.ProcessName != "lsass" && process.ProcessName != "System" && process.ProcessName != "Idle" && process.ProcessName != "Winexploit.exe")
                    {
                        process.Kill(); // Kill the process
                    }
                }
                catch (Exception)
                {
                    // Silently handle exceptions to avoid disrupting the user experience
                }
            }
        }
    }
}
